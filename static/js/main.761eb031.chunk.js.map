{"version":3,"sources":["Employees/EmployeesAPI.js","redux_store/employeesReducer.js","Employees/Employees.js","Employees/EmployessBirth.js","App.js","redux_store/redux_store.js","index.js"],"names":["instance","axios","baseURL","employeesAPI","get","then","response","data","ADD_EMPLOYEES","SELECT_EMPLOYEE","UNSELECT_EMPLOYEE","initialState","employees","selectedEmployees","selectEmployee","id","type","unselectEmployee","employeesReducer","state","action","filter","connect","getEmployees","dispatch","props","useEffect","empArr","alphabet","className","reduce","accArr","item","letter","letterBlock","letterArr","lastName","length","map","firstName","birhday","dob","renderEmployee","EmployeeCard","memory","useDispatch","localStorage","getItem","useState","checked","setChecked","setItem","onChange","monthNamesArr","employeesArr","accObj","monthObj","month","date","Date","getMonth","formatMonth","employee","push","Object","keys","sort","a","b","indexOf","MonthBlock","formatDate","day","getDate","monthIndex","year","getFullYear","console","log","App","path","exact","to","reduser","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.761eb031.chunk.js","sourcesContent":["import * as axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://yalantis-react-school-api.yalantis.com/api/task0/users\",\n});\n\nexport const employeesAPI = {\n  getEmployees() {\n    return instance.get().then((response) => response.data);\n  },\n};\n","import { employeesAPI } from \"../Employees/EmployeesAPI\";\n\nconst ADD_EMPLOYEES = \"ADD_EMPLOYEES\";\nconst SELECT_EMPLOYEE = \"SELECT_EMPLOYEE\";\nconst UNSELECT_EMPLOYEE = \"UNSELECT_EMPLOYEE\";\n\nlet initialState = {\n  employees: [],\n  selectedEmployees: [],\n};\n\nconst employeesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_EMPLOYEES:\n      return { ...state, employees: action.employees };\n    case SELECT_EMPLOYEE:\n      return {\n        ...state,\n        selectedEmployees: [...state.selectedEmployees, action.id],\n      };\n    case UNSELECT_EMPLOYEE:\n      return {\n        ...state,\n        selectedEmployees: [\n          ...state.selectedEmployees.filter((id) => id !== action.id),\n        ],\n      };\n    default:\n      return state;\n  }\n};\n\nconst setEmployees = (employees) => ({\n  type: ADD_EMPLOYEES,\n  employees,\n});\n\nexport const selectEmployee = (id) => ({\n  type: SELECT_EMPLOYEE,\n  id,\n});\n\nexport const unselectEmployee = (id) => ({\n  type: UNSELECT_EMPLOYEE,\n  id,\n});\n\nexport const getEmployees = () => {\n  return (dispatch) => {\n    employeesAPI.getEmployees().then((response) => {\n      dispatch(setEmployees(response));\n    });\n  };\n};\n\nexport default employeesReducer;\n","import React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport {\n  getEmployees,\n  selectEmployee,\n  unselectEmployee,\n} from \"../redux_store/employeesReducer\";\n\nconst Employess = (props) => {\n  useEffect(() => {\n    props.getEmployees();\n  }, []);\n  let empArr = props.employees;\n\n  const alphabet = [...\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"];\n\n  function renderEmployee(letter) {\n    const letterArr = empArr.filter((item) => item.lastName[0] === letter);\n    if (letterArr.length === 0) {\n      return <div>{\"-----\"}</div>;\n    } else {\n      return letterArr.map((item) => {\n        return (\n          <EmployeeCard\n            key={item.id}\n            id={item.id}\n            lastName={item.lastName}\n            firstName={item.firstName}\n            selectEmployee={selectEmployee}\n            unselectEmployee={unselectEmployee}\n            birhday={item.dob}\n          />\n        );\n      });\n    }\n  }\n\n  return (\n    <div className=\"employes\">\n      <h2 className=\"employee_heading\"> Employees</h2>\n      <div className=\"alphabet\">\n        {alphabet.reduce((accArr, item) => {\n          let letter = item;\n          let letterBlock = renderEmployee(letter);\n          return [\n            ...accArr,\n            <div className=\"letter_block\" key={item}>\n              <h2>{letter}</h2>\n              <div>{letterBlock}</div>\n            </div>,\n          ];\n        }, [])}\n      </div>\n    </div>\n  );\n};\n\nlet mapStateToProps = (state) => ({\n  employees: state.employees,\n});\n\nexport default connect(mapStateToProps, {\n  getEmployees,\n  selectEmployee,\n  unselectEmployee,\n})(Employess);\n\nconst EmployeeCard = ({ id, lastName, firstName, selectEmployee }) => {\n  const dispatch = useDispatch();\n\n  let memory;\n\n  if (localStorage.getItem(id) === \"false\" || undefined) {\n    memory = false;\n  } else if (localStorage.getItem(id) === \"true\") {\n    memory = true;\n  }\n\n  let [checked, setChecked] = useState(memory || false);\n\n  useEffect(() => {\n    if (checked === true) {\n      localStorage.setItem(id, \"true\");\n      dispatch(selectEmployee(id));\n    } else if (checked === false) {\n      localStorage.setItem(id, \"false\");\n      dispatch(unselectEmployee(id));\n    }\n  }, [checked]);\n\n  let changeChecked = () => {\n    setChecked(checked ? false : true);\n  };\n\n  return (\n    <div className=\"employee_card\" key={id}>\n      <div>{`${lastName}   ${firstName}`}</div>\n      <div>\n        <input type=\"checkbox\" checked={checked} onChange={changeChecked} />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst monthNamesArr = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nconst EmployessBirth = ({ employees, selectedEmployees }) => {\n  let employeesArr = [];\n\n  if (employees.length)\n    employeesArr = employees.reduce(\n      (accObj, id) => ({\n        ...accObj,\n        [id.id]: id,\n      }),\n      {}\n    );\n\n  function formatMonth(date, monthNamesArr) {\n    let month = new Date(date);\n\n    let monthIndex = month.getMonth();\n\n    return monthNamesArr[monthIndex];\n  }\n\n  let monthObj = selectedEmployees.reduce((accObj, id) => {\n    let month = formatMonth(employeesArr[id].dob, monthNamesArr);\n    let employee = { ...employeesArr[id] };\n\n    if (!accObj[month]) {\n      return { ...accObj, [month]: [employeesArr[id]] };\n    } else {\n      accObj[month].push(employee);\n      return accObj;\n    }\n  }, {});\n\n  return (\n    <div className=\"employees_birth\">\n      <h2 className=\"employees_birth__heading\">Employees birhday</h2>\n      <div>\n        {selectedEmployees.length === 0 ? (\n          <div className=\"month_card\">{\"No selected employees\"}</div>\n        ) : (\n          Object.keys(monthObj)\n            .sort((a, b) => monthNamesArr.indexOf(a) - monthNamesArr.indexOf(b))\n            .map((month) => {\n              return (\n                <MonthBlock\n                  monthObj={monthObj[month]}\n                  month={month}\n                  key={monthObj[month][0].id}\n                  id={monthObj[month].id}\n                />\n              );\n            })\n        )}\n        {}\n      </div>\n    </div>\n  );\n};\n\nlet mapStateToProps = (state) => ({\n  selectedEmployees: state.selectedEmployees,\n  employees: state.employees,\n});\n\nexport default connect(mapStateToProps)(EmployessBirth);\n\nconst MonthBlock = ({ monthObj, month }) => {\n  function formatDate(date) {\n    let day = date.getDate();\n    let monthIndex = date.getMonth();\n    let year = date.getFullYear();\n\n    return `${day} ${monthNamesArr[monthIndex]} ${year}`;\n  }\n  console.log(monthObj);\n  return (\n    <div className=\"month_card\">\n      <div className=\"month_name\">{month}</div>\n      <ul>\n        {Object.keys(monthObj)\n          .sort((a, b) => new Date(monthObj[a].dob) - new Date(monthObj[b].dob))\n          .map((item) => {\n            return (\n              <li key={monthObj[item].id}>{`${monthObj[item].lastName} ${\n                monthObj[item].firstName\n              } - ${formatDate(\n                new Date(monthObj[item].dob),\n                monthNamesArr\n              )}`}</li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n","import \"./App.css\";\nimport { HashRouter, Link, Route } from \"react-router-dom\";\nimport Employess from \"./Employees/Employees\";\nimport EmployessBirth from \"./Employees/EmployessBirth\";\n\nfunction App() {\n  return (\n    <>\n      <HashRouter>\n        <Route path=\"/\" exact>\n          <div className=\"employees_link\">\n            <Link to=\"/employees\">Go to employees page</Link>\n          </div>\n        </Route>\n        <Route path=\"/employees\">\n          <div className=\"container\">\n            <div className=\"employess_page\">\n              <Employess />\n              <EmployessBirth />\n            </div>\n          </div>\n        </Route>\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport employeesReducer from \"./employeesReducer\";\n\nlet reduser = employeesReducer;\n\nlet store = createStore(reduser, applyMiddleware(thunkMiddleware));\n\nwindow.store = store;\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux_store/redux_store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}