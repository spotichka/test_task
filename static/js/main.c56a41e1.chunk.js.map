{"version":3,"sources":["Employees/EmployeesAPI.js","redux_store/employeesReducer.js","Employees/Employees.js","Employees/EmployessBirth.js","App.js","redux_store/redux_store.js","index.js"],"names":["instance","axios","baseURL","employeesAPI","get","then","response","data","ADD_EMPLOYEES","SELECT_EMPLOYEE","UNSELECT_EMPLOYEE","initialState","employees","selectedEmployees","selectEmployee","id","type","unselectEmployee","employeesReducer","state","action","filter","connect","getEmployees","dispatch","props","useEffect","empArr","className","reduce","accArr","item","letter","letterBlock","letterArr","lastName","length","map","firstName","birhday","dob","renderEmployee","EmployeeCard","memory","useDispatch","localStorage","getItem","useState","checked","setChecked","setItem","onChange","employeesArr","accObj","monthObj","date","month","Date","getMonth","employee","push","Object","keys","MonthBlock","formatDate","day","getDate","monthIndex","year","getFullYear","App","path","exact","to","reduser","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c56a41e1.chunk.js","sourcesContent":["import * as axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://yalantis-react-school-api.yalantis.com/api/task0/users\",\n});\n\nexport const employeesAPI = {\n  getEmployees() {\n    return instance.get().then((response) => {\n      return response.data;\n    });\n  },\n};\n","import { employeesAPI } from \"../Employees/EmployeesAPI\";\n\nconst ADD_EMPLOYEES = \"ADD_EMPLOYEES\";\nconst SELECT_EMPLOYEE = \"SELECT_EMPLOYEE\";\nconst UNSELECT_EMPLOYEE = \"UNSELECT_EMPLOYEE\";\n\nlet initialState = {\n  employees: [],\n  selectedEmployees: [],\n};\n\nconst employeesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_EMPLOYEES:\n      return { ...state, employees: action.employees };\n    case SELECT_EMPLOYEE:\n      return {\n        ...state,\n        selectedEmployees: [...state.selectedEmployees, action.id],\n      };\n    case UNSELECT_EMPLOYEE:\n      return {\n        ...state,\n        selectedEmployees: [\n          ...state.selectedEmployees.filter((id) => id !== action.id),\n        ],\n      };\n    default:\n      return state;\n  }\n};\n\nconst setEmployees = (employees) => ({\n  type: ADD_EMPLOYEES,\n  employees,\n});\n\nexport const selectEmployee = (id) => ({\n  type: SELECT_EMPLOYEE,\n  id,\n});\n\nexport const unselectEmployee = (id) => ({\n  type: UNSELECT_EMPLOYEE,\n  id,\n});\n\nexport const getEmployees = () => {\n  return (dispatch) => {\n    employeesAPI.getEmployees().then((response) => {\n      dispatch(setEmployees(response));\n    });\n  };\n};\n\nexport default employeesReducer;\n","import React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport {\n  getEmployees,\n  selectEmployee,\n  unselectEmployee,\n} from \"../redux_store/employeesReducer\";\n\nconst Employess = (props) => {\n  useEffect(() => {\n    props.getEmployees();\n  }, []);\n  let empArr = props.employees;\n\n  let alphabet = [\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n  ];\n\n  function renderEmployee(letter) {\n    let letterArr = empArr.filter((item) => {\n      let firstLetter = item.lastName[0];\n      if (firstLetter === letter) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n    if (letterArr.length === 0) {\n      return <div>{\"-----\"}</div>;\n    } else {\n      return letterArr.map((item) => {\n        return (\n          <EmployeeCard\n            key={item.id}\n            id={item.id}\n            lastName={item.lastName}\n            firstName={item.firstName}\n            selectEmployee={selectEmployee}\n            unselectEmployee={unselectEmployee}\n            birhday={item.dob}\n          />\n        );\n      });\n    }\n  }\n\n  return (\n    <div className=\"employes\">\n      <h2 className=\"employee_heading\"> Employees</h2>\n      <div className=\"alphabet\">\n        {alphabet.reduce((accArr, item) => {\n          let letter = item;\n          let letterBlock = renderEmployee(letter);\n          return [\n            ...accArr,\n            <div className=\"letter_block\" key={item}>\n              <h2>{letter}</h2>\n              <div>{letterBlock}</div>\n            </div>,\n          ];\n        }, [])}\n      </div>\n    </div>\n  );\n};\n\nlet mapStateToProps = (state) => ({\n  employees: state.employees,\n});\n\nexport default connect(mapStateToProps, {\n  getEmployees,\n  selectEmployee,\n  unselectEmployee,\n})(Employess);\n\nconst EmployeeCard = ({ id, lastName, firstName, selectEmployee }) => {\n  const dispatch = useDispatch();\n\n  let memory;\n\n  if (localStorage.getItem(id) === \"false\" || undefined) {\n    memory = false;\n  } else if (localStorage.getItem(id) === \"true\") {\n    memory = true;\n  }\n\n  let [checked, setChecked] = useState(memory);\n\n  useEffect(() => {\n    if (checked === true) {\n      localStorage.setItem(id, \"true\");\n      dispatch(selectEmployee(id));\n    } else if (checked === false) {\n      localStorage.setItem(id, \"false\");\n      dispatch(unselectEmployee(id));\n    }\n  }, [checked]);\n\n  let changeChecked = () => {\n    setChecked(checked ? false : true);\n  };\n\n  return (\n    <div className=\"employee_card\" key={id}>\n      <div>{`${lastName}   ${firstName}`}</div>\n      <div>\n        <input type=\"checkbox\" checked={checked} onChange={changeChecked} />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst EmployessBirth = ({ employees, selectedEmployees }) => {\n  let employeesArr = [];\n\n  if (employees.length)\n    employeesArr = employees.reduce(\n      (accObj, id) => ({\n        ...accObj,\n        [id.id]: id,\n      }),\n      {}\n    );\n\n  function formatMonth(date) {\n    let month = new Date(date);\n    let monthNames = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n\n    let monthIndex = month.getMonth();\n\n    return monthNames[monthIndex];\n  }\n\n  let monthObj = selectedEmployees.reduce((accObj, id) => {\n    let month = formatMonth(employeesArr[id].dob);\n    let employee = { ...employeesArr[id] };\n\n    if (!accObj[month]) {\n      return { ...accObj, [month]: [employeesArr[id]] };\n    } else {\n      accObj[month].push(employee);\n      return accObj;\n    }\n  }, {});\n\n  return (\n    <div className=\"employees_birth\">\n      <h2 className=\"employees_birth__heading\">Employees birhday</h2>\n      <div>\n        {Object.keys(monthObj).map((month) => {\n          return (\n            <MonthBlock\n              monthObj={monthObj[month]}\n              month={month}\n              key={monthObj[month][0].id}\n              id={monthObj[month].id}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nlet mapStateToProps = (state) => ({\n  selectedEmployees: state.selectedEmployees,\n  employees: state.employees,\n});\n\nexport default connect(mapStateToProps)(EmployessBirth);\n\nconst MonthBlock = ({ monthObj, month }) => {\n  function formatDate(date) {\n    let monthNames = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n\n    let day = date.getDate();\n    let monthIndex = date.getMonth();\n    let year = date.getFullYear();\n\n    return day + \" \" + monthNames[monthIndex] + \" \" + year;\n  }\n\n  return (\n    <div className=\"month_card\">\n      <div className=\"month_name\">{month}</div>\n      <ul>\n        {Object.keys(monthObj).map((item) => {\n          return (\n            <li key={monthObj[item].id}>{`${monthObj[item].lastName} ${\n              monthObj[item].firstName\n            } - ${formatDate(new Date(monthObj[item].dob))}`}</li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import \"./App.css\";\nimport { HashRouter, Link, Route } from \"react-router-dom\";\nimport Employess from \"./Employees/Employees\";\nimport EmployessBirth from \"./Employees/EmployessBirth\";\n\nfunction App() {\n  return (\n    <>\n      <HashRouter>\n        <Route path=\"/\" exact>\n          <div className=\"employees_link\">\n            <Link to=\"/employees\">Go to employees page</Link>\n          </div>\n        </Route>\n        <Route path=\"/employees\">\n          <div className=\"container\">\n            <div className=\"employess_page\">\n              <Employess />\n              <EmployessBirth />\n            </div>\n          </div>\n        </Route>\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport employeesReducer from \"./employeesReducer\";\n\nlet reduser = employeesReducer;\n\nlet store = createStore(reduser, applyMiddleware(thunkMiddleware));\n\nwindow.store = store;\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux_store/redux_store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}